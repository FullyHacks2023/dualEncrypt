<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta http-equiv="X-UA-Compatible" content="IE=edge" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>Document</title>
        <link
            href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css"
            rel="stylesheet"
            integrity="sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ"
            crossorigin="anonymous"
        />
        <link
            rel="stylesheet"
            href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.4/font/bootstrap-icons.css"
        />
        <link rel="preconnect" href="https://fonts.googleapis.com" />
        <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
        <link
            href="https://fonts.googleapis.com/css2?family=Iceberg&family=Open+Sans:wght@400;500;600&family=Titillium+Web:wght@200;400;700&display=swap"
            rel="stylesheet"
        />
    </head>
    <body>
        <div id="app">
            <nav class="navbar navbar-expand-lg navbar-light" style="background-color: #1d1b31">
                <div class="container-fluid px-5">
                    <a
                        class="navbar-brand text-light"
                        href="/"
                        style="font-family: Iceberg; font-size: 25px"
                        >DevSec</a
                    >
                    <button
                        class="navbar-toggler"
                        type="button"
                        data-bs-toggle="collapse"
                        data-bs-target="#navbarSupportedContent"
                        aria-controls="navbarSupportedContent"
                        aria-expanded="false"
                        aria-label="Toggle navigation"
                    >
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                            <li class="nav-item" style="margin-left: 70px;">
                                <a
                                    class="nav-link text-light"
                                    v-bind:href="baseURL+'/dashboard/newdata' "
                                    >Add New</a
                                >
                            </li>
                        </ul>

                        <div class="d-flex">
                            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                                <li class="nav-item dropdown">
                                    <a
                                        class="nav-link dropdown-toggle text-light"
                                        href="#"
                                        id="navbarDropdownMenuLink"
                                        role="button"
                                        data-bs-toggle="dropdown"
                                        aria-expanded="false"
                                    >
                                        Account
                                    </a>
                                    <ul
                                        class="dropdown-menu"
                                        aria-labelledby="navbarDropdownMenuLink"
                                        style="right: 0 !important; left: auto !important"
                                    >
                                        <li>
                                            <a
                                                class="dropdown-item"
                                                v-bind:href="baseURL+'/api/auth/logout' "
                                                >Logout</a
                                            >
                                        </li>
                                    </ul>
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </nav>
            <!-- delete modal -->
            <div class="modal" tabindex="-1" id="deleteModal">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Delete Data</h5>
                            <button
                                type="button"
                                class="btn-close"
                                data-bs-dismiss="modal"
                                aria-label="Close"
                            ></button>
                        </div>
                        <div class="modal-body">
                            <p>you will not able to recover data once deleted</p>
                            <p>If you are sure to delete data , click on Delete button</p>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">
                                Close
                            </button>

                            <button type="button" class="btn btn-danger" @click="DeleteData">
                                Delete
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            <!-- delete modal ends-->
            <div class="container-fluid">
                <div class="new-content container mt-5">
                    <form @submit.prevent="uploadData">
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label">Title</label>
                            <input
                                type="text"
                                class="form-control"
                                id="exampleFormControlInput1"
                                placeholder="Title"
                                v-model="heading"
                            />
                        </div>
                        <div class="mb-3">
                            <label for="exampleFormControlTextarea11" class="form-label"
                                >Notes</label
                            >
                            <textarea
                                class="form-control"
                                id="exampleFormControlTextarea11"
                                rows="5"
                                v-model="data"
                            ></textarea>
                        </div>
                        <div class="mb-3">
                            <label for="exampleFormControlInput1" class="form-label">Hint</label>
                            <input
                                type="text"
                                class="form-control"
                                id="exampleFormControlInput1"
                                placeholder="hint"
                                v-model="hint"
                            />
                        </div>
                        <label for="exampleFormControlInput1" class="form-label">Pass code</label>
                        <div class="input-group mb-3">
                            <input
                                :type="passVisible ? 'text' : 'password' "
                                class="form-control"
                                placeholder="Encryption Password"
                                aria-label="Password"
                                aria-describedby="button-addon2"
                                id="password"
                                v-model="password"
                            />
                            <button
                                class="btn btn-outline-secondary"
                                type="button"
                                @click="togglePass"
                            >
                                <i class="bi bi-eye" id="togglePassword" v-if="passVisible"></i>
                                <i class="bi bi-eye-slash" id="togglePassword" v-else></i>
                            </button>
                        </div>
                        
                        <div class="row">
                            <div class="col-md-4">
                                <button
                                    type="button"
                                    @click="decryptdata"
                                    class="btn btn-outline-primary mt-4"
                                >
                                    Decrypt data
                                </button>
                            </div>
                            <div class="col-md-4 text-center">
                                <button
                                    type="button"
                                    @click="deleteData"
                                    class="btn btn-outline-danger mt-4"
                                    v-if="isAbleToDecrypt"
                                >
                                    Delete
                                </button>
                            </div>
                            <div class="col-md-4 text-end">
                                <button
                                    type="submit"
                                    class="btn btn-outline-warning mt-4"
                                    @click="uploadData"
                                    v-if="isAbleToDecrypt"
                                >
                                    Edit data
                                </button>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </body>

    <script
        src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe"
        crossorigin="anonymous"
    ></script>

    <script src="/static/js/axios.js"></script>
    <script src="/static/js/vue.js"></script>
    <script src="/static/js/crypto-js.min.js"></script>
    <script>
        const app = Vue.createApp({
            data() {
                return {
                    baseURL: '',
                    dataId: '',
                    heading: '',
                    hint: '',
                    data: '',
                    password: '',
                    encryptdata: '',
                    isAbleToDecrypt: false,
                    passVisible: false
                };
            },
            methods: {
                togglePass: function () {
                    this.passVisible = !this.passVisible;
                },
                uploadData: async function () {
                    try {
                        if (this.dataId && this.heading && this.data && this.password) {
                            this.encryptdata = CryptoJS.AES.encrypt(
                                this.data,
                                this.password
                            ).toString();
                            // console.log(this.encryptdata);
                            const put_url = this.baseURL + '/api/data/mydata';
                            const updateData = {
                                id: this.dataId,
                                heading: this.heading,
                                encryptdata: this.encryptdata,
                                hint: this.hint
                            };
                            const response = await axios.put(put_url, updateData);
                            // console.log(response.data);
                            if (response.data?.id && response.data?.encryptdata) {
                                console.log('update done');
                                this.encryptdata = response.data.encryptdata;
                            }
                        }
                    } catch (err) {
                        console.log(err);
                        if (err?.response?.data?.errorMsg) {
                            this.error += err.response.data.errorMsg;
                        } else {
                            this.error += 'Error, Please try again after some time';
                        }
                    }
                },
                getData: async function () {
                    try {
                        if (this.dataId) {
                            const get_url = this.baseURL + '/api/data/mydata/' + this.dataId;
                            const response = await axios.get(get_url);
                            // console.log(response.data);
                            if (response.data?.success && response.data?.data) {
                                this.heading = response.data.data.heading;
                                this.data = response.data.data.encryptdata;
                                this.hint = response.data.data.hint
                            }
                        }
                    } catch (err) {
                        console.log(err);
                        if (err?.response?.data?.errorMsg) {
                            this.error += err.response.data.errorMsg;
                        } else if (err.response?.status === 401) {
                            window.location.href = this.baseURL + '/auth';
                        } else {
                            this.error += 'Error, Please try again after some time';
                        }
                    }
                },
                deleteData: function(){
                    const myModal = new bootstrap.Modal(document.getElementById('deleteModal'))
                    myModal.show()
                }, 
                DeleteData: async function () {
                    try {
                        if (this.dataId) {
                            const get_url = this.baseURL + '/api/data/mydata/' + this.dataId;
                            const response = await axios.delete(get_url);
                            // console.log(response.data);
                            if (response.data?.deleteStatus) {
                                // console.log('deleted');
                                window.location.href = this.baseURL + '/dashboard';
                            }
                        }
                    } catch (err) {
                        console.log(err);
                        if (err?.response?.data?.errorMsg) {
                            this.error += err.response.data.errorMsg;
                        } else if (err.response?.status === 401) {
                            window.location.href = this.baseURL + '/auth';
                        } else {
                            this.error += 'Error, Please try again after some time';
                        }
                    }
                },

                decryptdata: function () {
                    try {
                        if (this.data && this.password) {
                            var bytes = CryptoJS.AES.decrypt(this.data, this.password);
                            var originalText = bytes.toString(CryptoJS.enc.Utf8);
                            if (originalText) {
                                this.data = originalText;
                                this.isAbleToDecrypt = true;
                            }
                        }
                    } catch (err) {
                        console.log(err);
                    }
                }
            },
            mounted: async function () {
                this.baseURL = window.location.protocol + '//' + window.location.host;
                this.dataId = '<%= dataid %>';
                // console.log(this.dataId);
                await this.getData();
                // var ciphertext = CryptoJS.AES.encrypt('my message', 'secret key 123').toString();
                // console.log(ciphertext);

                // // Decrypt
                // var bytes = CryptoJS.AES.decrypt(ciphertext, 'secret key 123');
                // var originalText = bytes.toString(CryptoJS.enc.Utf8);
                // console.log(originalText);
            }
        });
        app.mount('#app');
    </script>
</html>
